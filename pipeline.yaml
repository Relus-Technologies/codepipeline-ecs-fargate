AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template for building a simple docker pipeline'
Parameters:
  AccountId:
    Type: String
  ApplicationName:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    ConstraintDescription: Application name must be between 2 and 15 characters, begin with a letter, and only contain lowercase letters, numbers, and hyphens (-).
    Description: Name of the application.
    MaxLength: 15
    MinLength: 2
    Type: String
  Region:
    Type: String
Resources:
  EcsRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ApplicationName
  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryDescription: !Join ['', [!Ref ApplicationName, ' project repository']]
      RepositoryName: !Ref ApplicationName
  BuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: CodeBuildRole
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Name:
        Fn::Join: [ '-', [ !Ref ApplicationName, 'build' ] ]
      ServiceRole: !GetAtt BuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref EcsRepository
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Description: S3 bucket for CodePipeline artifacts
    Properties:
      BucketName: !Join ['-', [!Ref 'ApplicationName', !Ref 'AWS::Region', pipeline, artifacts]]
      VersioningConfiguration:
        Status: Enabled
  PipelineRole:
    Description: Role used for pipeline
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - !Join ['', ['arn:aws:s3:::', !Ref 'S3Bucket']]
                  - !Join ['', ['arn:aws:s3:::', !Ref 'S3Bucket',/*]]
              - Action:
                  - codecommit:GetBranch
                Effect: Allow
                Resource:
                  - !GetAtt CodeCommitRepo.Arn
          PolicyName: !Join ['-', [!Ref 'ApplicationName', pipeline]]
      RoleName: !Join ['-', [!Ref 'ApplicationName', pipeline]]
  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - PipelineRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'S3Bucket'
        Type: S3
      Name: !Join ['-', [!Ref 'ApplicationName', pipeline]]
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
          - Name: SourceFetch
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeCommit
              Version: 1
            Configuration:
              BranchName: master
              PollForSourceChanges: false
              RepositoryName: !Ref 'ApplicationName'
            InputArtifacts: []
            OutputArtifacts:
              - Name: !Join ['-', [!Ref 'ApplicationName', source]]
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: BuildDocker
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: 1
            Configuration:
              ProjectName: !Ref 'ApplicationName'
            InputArtifacts:
              - Name: !Join ['-', [!Ref 'ApplicationName', source]]
            OutputArtifacts:
              - Name: !Join ['-', [!Ref 'ApplicationName', cfntemplate]]
            RunOrder: 1
        - Name: Deploy
          Actions:
          - Name: DeployTemplate
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: 1
            Configuration:
              ActionMode: CHANGE_SET_REPLACE
              Capabilities: CAPABILITY_IAM
              ChangeSetName: pipeline-changeset
              ParameterOverrides: !Join ['', ['{"ApplicationName":"', !Ref 'ApplicationName', '"}']]
              RoleArn: !GetAtt [PipelineRole, Arn]
              StackName: !Join ['-', [deploy, !Ref 'ApplicationName']]
              TemplatePath: !Join ['', [!Ref 'ApplicationName', -cfntemplate, '::template-export.yml']]
            InputArtifacts:
              - Name: !Join ['-', [!Ref 'ApplicationName', cfntemplate]]
            RunOrder: 1